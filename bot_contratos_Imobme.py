# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\interface.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import asyncio
import qasync
import sys
import pandas as pd
import traceback
#import xlwings as xw # type: ignore
#import os

from typing import Dict
from Entities.credencital_load import Credential
from tkinter import filedialog
from Entities.data_manipulation import XWtoDF
from time import sleep
from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_Interface(object):
    def __init__(self):
        self.path = ""
        
    def setupUi(self, Interface):
        Interface.setObjectName("Interface")
        Interface.resize(433, 181)
        Interface.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor)) #type: ignore
        
        self.horizontalLayoutWidget = QtWidgets.QWidget(Interface)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 10, 411, 151))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        
        self.box_principal = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.box_principal.setContentsMargins(0, 0, 0, 0)
        self.box_principal.setObjectName("box_principal")
        
        self.box_butoes = QtWidgets.QVBoxLayout()
        self.box_butoes.setObjectName("box_butoes")
       
        self.logar = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        #self.logar.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor)) #type: ignore
        self.logar.setObjectName("logar")
        self.logar.clicked.connect(self.ir_tela_login)
        
        self.box_butoes.addWidget(self.logar)
        
        self.box_principal.addLayout(self.box_butoes)
        
        self.multi_tela = QtWidgets.QStackedWidget(self.horizontalLayoutWidget)
        self.multi_tela.setObjectName("multi_tela")
        
        self.login_senha = QtWidgets.QWidget()
        self.login_senha.setObjectName("login_senha")
        
        self.verticalLayoutWidget = QtWidgets.QWidget(self.login_senha)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(30, 0, 261, 115))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        
        self.box_login_senha = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.box_login_senha.setContentsMargins(0, 0, 0, 0)
        self.box_login_senha.setObjectName("box_login_senha")
        
        self.texto_login = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.texto_login.setTextFormat(QtCore.Qt.AutoText) #type: ignore
        self.texto_login.setAlignment(QtCore.Qt.AlignCenter) #type: ignore
        self.texto_login.setObjectName("texto_login")
        
        self.box_login_senha.addWidget(self.texto_login)
       
        self.campo_login = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.campo_login.setObjectName("campo_login")
        self.campo_login.setText(credencial.load()['user'])
        
        self.box_login_senha.addWidget(self.campo_login)
        
        self.texto_senha = QtWidgets.QLabel(self.verticalLayoutWidget)
        #self.texto_senha.setEnabled(False)
        self.texto_senha.setAlignment(QtCore.Qt.AlignCenter) #type: ignore
        self.texto_senha.setObjectName("texto_senha")
        
        self.box_login_senha.addWidget(self.texto_senha)
        
        self.campo_senha = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.campo_senha.setEchoMode(QtWidgets.QLineEdit.Password)
        self.campo_senha.setObjectName("campo_senha")
        self.campo_senha.setText(credencial.load()['password'])
        
        self.box_login_senha.addWidget(self.campo_senha)
        
        self.botao_salvar = QtWidgets.QPushButton(self.login_senha)
        self.botao_salvar.setEnabled(True)
        self.botao_salvar.setGeometry(QtCore.QRect(108, 120, 91, 23))
        #self.botao_salvar.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor)) #type: ignore
        self.botao_salvar.setTabletTracking(False)
        self.botao_salvar.setAcceptDrops(False)
        self.botao_salvar.setAutoFillBackground(False)
        self.botao_salvar.setIconSize(QtCore.QSize(16, 16))
        self.botao_salvar.setCheckable(False)
        self.botao_salvar.setAutoDefault(True)
        self.botao_salvar.setDefault(False)
        self.botao_salvar.setFlat(False)
        self.botao_salvar.setObjectName("botao_salvar")
        self.botao_salvar.clicked.connect(self.salvar_credencial)
        
        self.multi_tela.addWidget(self.login_senha)
        
        self.vazio = QtWidgets.QWidget()
        self.vazio.setObjectName("vazio")
        
        self.carregar_arquivos = QtWidgets.QPushButton(self.vazio)
        self.carregar_arquivos.setObjectName("Carregar Arquivo")
        self.carregar_arquivos.setGeometry(QtCore.QRect(108, 00, 110, 23))
        self.carregar_arquivos.clicked.connect(self.carregar_planilha)
        
        self.texto_retorno = QtWidgets.QLabel(self.vazio)
        self.texto_retorno.setObjectName("Texto Retorno")
        self.texto_retorno.setGeometry(QtCore.QRect(30, 30, 300, 63))
        self.texto_retorno.setWordWrap(True)
        self.texto_retorno.setText("")
        
        self.iniciar_processo = QtWidgets.QPushButton(self.vazio)
        self.iniciar_processo.setObjectName("Iniciar Processos")
        self.iniciar_processo.setGeometry(QtCore.QRect(108, 125, 110, 23))
        self.iniciar_processo.setVisible(False)
        self.iniciar_processo.clicked.connect(self.iniciar)
        
        self.multi_tela.addWidget(self.vazio)
        
        self.box_principal.addWidget(self.multi_tela)

        self.retranslateUi(Interface)
        self.multi_tela.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(Interface)
        
       
    def retranslateUi(self, Interface):
        self.__translate = QtCore.QCoreApplication.translate
        Interface.setWindowTitle(self.__translate("Interface", "Dialog"))
        
        self.logar.setText(self.__translate("Interface", "Logar"))
        
        self.carregar_arquivos.setText(self.__translate("Interface", "Carregar Planilha"))
        
        self.iniciar_processo.setText(self.__translate("Interface", "Iniciar Processos"))
        
        self.texto_login.setText(self.__translate("Interface", "Login"))
        
        self.texto_senha.setText(self.__translate("Interface", "Senha"))
        
        self.botao_salvar.setText(self.__translate("Interface", "Salvar"))
    
    def ir_tela_login(self):
        self.multi_tela.setCurrentIndex(0)
        self.logar.setText(self.__translate("Interface", "Voltar"))
        self.logar.clicked.disconnect()
        self.logar.clicked.connect(self.fechar_tela_login)
        
    def fechar_tela_login(self):
        self.multi_tela.setCurrentIndex(1)
        self.campo_login.setText(credencial.load()['user'])
        self.campo_senha.setText(credencial.load()['password'])
        self.logar.clicked.disconnect()
        self.logar.clicked.connect(self.ir_tela_login)
        self.logar.setText(self.__translate("Interface", "Logar"))
    
    def salvar_credencial(self):
        login = self.campo_login.text()
        password = self.campo_senha.text()
        credencial.salvar(user=login, password=password)
        self.fechar_tela_login()
        
    
    def carregar_planilha(self):
        asyncio.create_task(self.load_file())
    async def load_file(self):
        Interface.hide()
        try:
            valido:bool = True
            texto_para_retorno:list = []
            self.path = filedialog.askopenfilename()
            
            self.texto_retorno.setText("")
            if not (self.path.endswith(".xlsx")) and not (self.path.endswith(".xlsm")):
                texto_para_retorno.append("Selecione apenas planilhas excel")
                valido = False
            else:
                texto_para_retorno.append(f"'{self.path}'\n")
            
            try:
                dados:Dict[str, pd.DataFrame] = XWtoDF.read_excel(self.path)
                try:
                    dados['novos_pagamentos']
                    texto_para_retorno.append("novos_pagamentos - OK!")
                except:
                    texto_para_retorno.append("a sheet Novos Pagamentos não foi encontrada!")
                    valido = False
                try:
                    dados['novos_contratos']
                    texto_para_retorno.append("novos_contratos - OK!")
                except:
                    texto_para_retorno.append("a sheet Novos Contratos não foi encontrada!")
                    valido = False
            except:
                texto_para_retorno.append("Não foi possivel ler a planilha selecionada!")
                valido = False
                
            texto_para_exibir:str = ""
            for texto in texto_para_retorno:
                texto_para_exibir += texto + "\n"
                
            self.texto_retorno.setText(texto_para_exibir)
            
            if valido:
                self.iniciar_processo.setVisible(True)
        except Exception as error:
            self.texto_retorno.setText(traceback.format_exc())
        finally:    
            Interface.show()
            Interface.raise_()
            Interface.activateWindow()
    
    def iniciar(self):
        asyncio.create_task(self.start_process())
    async def start_process(self):
        Interface.hide()
        try:
            pass
        except Exception as error:
            pass
        finally:
            Interface.show()
            Interface.raise_()
            Interface.activateWindow()


if __name__ == "__main__":
    credencial = Credential("imobme_credential")
    
    app = QtWidgets.QApplication(sys.argv)
    loop = qasync.QEventLoop(app)
    asyncio.set_event_loop(loop)
    
    Interface = QtWidgets.QDialog()
    ui = Ui_Interface()
    ui.setupUi(Interface)
    Interface.show()
    #app.exec_()
    loop.run_forever()
    